{"version":3,"sources":["webpack:///./src/Images/logo.svg","webpack:///./src/components/constant.js","webpack:///./src/components/Header.js","webpack:///./src/components/Banner.js","webpack:///./src/components/ALL_ITMES.js","webpack:///./src/components/Content.js","webpack:///./src/index.js"],"names":["module","exports","__webpack_require__","p","PAGES","ITEM_NUM","Header_Navigator","_ref","links","curIndex","updatePage","updateNav","isSmallScreen","open","toggleMenu","items","map","text","i","react_default","a","createElement","className","onClick","handleClick","key","toggleBtn","id","propTypes","prop_types_default","array","number","func","bool","Header","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","state","curPageIndex","isNavOpen","bind","updateScreenSize","react","index","setState","isOpen","window","innerWidth","addEventListener","removeEventListener","_this2","src","logo_default","alt","components_Banner","Banner","Banner_classCallCheck","Banner_possibleConstructorReturn","message","updateMessage","ALL_ITEMS","title","Content_Button","name","components_Content","Content","Content_classCallCheck","Content_possibleConstructorReturn","isLoaded","loaded","updateItems","scrollTo","length","posY","scroll","top","behavior","document","body","offsetHeight","innerHeight","filter","item","src_App","App","src_classCallCheck","src_possibleConstructorReturn","components_Header","react_dom_default","render","getElementById"],"mappings":"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","file":"main.feef.js","sourcesContent":["module.exports = __webpack_public_path__ + \"d27bb9f3fc9b8e0c1d6cb800e07349d5.svg\";","export const PAGES = [\"Page01\", \"Page02\", \"Page03\"];\nexport const ITEM_NUM = 4;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {PAGES} from \"./constant.js\";\nimport logo from \"../Images/logo.svg\";\n\n\nconst Navigator = ({\n    links,\n    curIndex,\n    updatePage,\n    updateNav,\n    isSmallScreen,\n    open,\n}) => {\n\n    const toggleMenu = () => {\n        if (isSmallScreen) {\n            updateNav(!open);\n        }\n    };\n\n    const handleClick = i => {\n        toggleMenu();\n        updatePage(i);\n    };\n\n    const items = links.map((text, i) => {\n        return (\n            <a\n                className={curIndex === i ? \"current\" : \"\"}\n                onClick={() => handleClick(i)}\n                key={i}>\n                {text}\n            </a>\n        );\n    });\n\n    const toggleBtn = (\n        <button className=\"toggle-nav-btn\" onClick={() => toggleMenu()} />\n    );\n\n    return (\n        <div id=\"navbar\" className={\"nav shadow \" + (open ? \"open\" : \"\")}>\n            {toggleBtn}\n            {items}\n        </div>\n    );\n};\n\n\nNavigator.propTypes = {\n    links: PropTypes.array,\n    curIndex: PropTypes.number,\n    updatePage: PropTypes.func,\n    updateNav: PropTypes.func,\n    isSmallScreen: PropTypes.bool,\n    open: PropTypes.bool,\n};\n\n\n\nexport default class Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            curPageIndex: 0,\n            isSmallScreen: false,\n            isNavOpen: false,\n        };\n\n        this.updatePage = this.updatePage.bind(this);\n        this.updateScreenSize = this.updateScreenSize.bind(this);\n        this.updateNav = this.updateNav.bind(this);\n\n    }\n    updatePage(index) {\n        this.setState({\n            curPageIndex: index,\n        });\n    }\n    updateNav(isOpen) {\n        this.setState({\n            isNavOpen: isOpen,\n        });\n    }\n    updateScreenSize() {\n        this.setState({\n            isSmallScreen: window.innerWidth < 800,\n        });\n    }\n    componentDidMount() {\n        this.updateScreenSize();\n        window.addEventListener(\"resize\", this.updateScreenSize, false);\n    }\n    componetWillMount() {\n        window.removeEventListener(\"resize\", this.updateScreenSize, false);\n    }\n    render() {\n        return (\n            <div>\n                <div\n                    onClick={() => this.updateNav(false)}\n                    className={\n                        \"overlay \" +\n                        (this.state.isSmallScreen && this.state.isNavOpen\n                            ? \"show\"\n                            : \"\")\n                    }\n                />\n                <div className=\"head\">\n                    <h1 className=\"head-logo\">\n                        <img src={logo} alt=\"logo\" />\n                    </h1>\n                    <div className=\"current-page\">\n                        <b>{PAGES[this.state.curPageIndex]}</b>\n                    </div>\n                    <Navigator\n                        links={PAGES}\n                        curIndex={this.state.curPageIndex}\n                        updatePage={this.updatePage}\n                        updateNav={this.updateNav}\n                        isSmallScreen={this.state.isSmallScreen}\n                        open={this.state.isSmallScreen && this.state.isNavOpen}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nconst message = \"Hi, there\";\n\nclass Banner extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: \"Message\",\n        };\n        this.updateMessage = this.updateMessage.bind(this);\n    }\n    updateMessage(text) {\n        this.setState({\n            message: text,\n        });\n    }\n    render() {\n        return (\n            <div onClick={ () => this.updateMessage(message)} className=\"banner row-item align-center\">\n                <h2>{this.state.message}</h2>\n            </div>\n        );\n    }\n}\nexport default Banner;\n","export const ALL_ITEMS = {\n    title: \"Showcase\",\n    items: [\n        \"Project 01\",\n        \"Project 02\",\n        \"project 03\",\n        \"project 04\",\n        \"project 05\",\n        \"project 06\",\n        \"project 07\",\n        \"project 08\",\n        \"project 09\",\n        \"project 10\",\n        \"project 11\",\n        \"project 12\",\n    ],\n};\n\n","import React, {Component} from \"react\";\nimport {ITEM_NUM} from \"./constant.js\";\nimport {ALL_ITEMS} from \"./ALL_ITMES.js\";\n\n\n/*\n * @param {object} ALL_ITEMS - data for loaded items\n * @param {string} ALL_ITEMS.title - title for item collection\n * @param {array} ALL_ITEMS.items - item contents\n * @param {number} ITEM_NUM - number of loaded items per time\n */\n\n\n/*\n * @param {string} name - class name\n * @param {string} text - text shown on button\n * @param {onClick} func - handleClick function\n */\n\n\nconst Button = ({name, text, onClick}) => {\n    return (\n        <button className={\"btn \" + name} onClick={onClick}>\n            <b>{text}</b>\n        </button>\n    );\n};\n\n\nclass Content extends Component {\n    constructor(props) {\n        super(props);\n\n        /*\n        * @param {boolean} isLoaded: all items are on current page\n        * @param {number} loaded: how many items are loaeded to current page\n        */\n\n        this.state = {\n            isLoaded: false,\n            loaded: ITEM_NUM,\n        };\n\n        this.updateItems = this.updateItems.bind(this);\n        this.scrollTo = this.scrollTo.bind(this);\n    }\n\n    /*\n     * load more items if there are more to load, if not scroll to top\n     */\n    updateItems() {\n        let loaded = this.state.loaded + ITEM_NUM;\n        this.setState({\n            isLoaded: loaded >= ALL_ITEMS.items.length,\n            loaded: loaded,\n        });\n        if (this.state.isLoaded) {\n            this.scrollTo(0);\n        }\n    }\n\n    /*\n     * @param {number} posY - will scroll whole page to to posY\n     */\n    scrollTo(posY) {\n        window.scroll({\n            top: posY,\n            behavior: \"smooth\",\n        });\n    }\n\n    /*\n     * scroll to bottom after rendering\n     */\n    componentDidUpdate() {\n        if (this.state.loaded <= ALL_ITEMS.items.length) {\n            this.scrollTo(document.body.offsetHeight - window.innerHeight);\n        }\n    }\n\n    render() {\n        // generate items base on loaded items and load interval\n\n        const items = () => {\n            return ALL_ITEMS.items\n                .filter((item, i) => i <= this.state.loaded - 1)\n                .map((item, i) => (\n                    <div key={\"item\" + i} className=\"item row-item\">\n                        {item}\n                    </div>\n                ));\n        };\n\n        return (\n            <div className=\"main align-center\">\n                <div className=\"row-item\">\n                    <h2>{ALL_ITEMS.title}</h2>\n                </div>\n                <div className=\"main-content\"> {items()} </div>\n                <div className=\"bottom\">\n                    {this.state.isLoaded ? (\n                        <div>No more projects...</div>\n                    ) : null}\n                    <Button\n                        name={this.state.isLoaded ? \"showInfo\" : \"more\"}\n                        text={this.state.isLoaded ? \"Back to top\" : \"More\"}\n                        onClick={this.updateItems}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Content;\n","import \"./style/main.scss\";\nimport React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header.js\";\nimport Banner from \"./components/Banner.js\";\nimport Content from \"./components/Content.js\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <div>\n                <Header />\n                <Banner />\n                <Content />\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App />, document.getElementById(\"App\"));\n"],"sourceRoot":""}